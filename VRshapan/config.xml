<krpano version="1.19" title="西江月" onstart="startup();">
    <!--嵌入默认皮肤模板-->
    <skin_settings maps="false"
                   maps_type="google"
                   maps_bing_api_key=""
                   maps_baidu_api_key=""
                   maps_zoombuttons="false"
                   gyro="true"
                   webvr="true"
                   webvr_gyro_keeplookingdirection="true"
                   webvr_prev_next_hotspots="true"
                   littleplanetintro="true"
                   title="true"
                   thumbs="true"
                   thumbs_width="120" thumbs_height="80" thumbs_padding="10" thumbs_crop="0|40|240|160"
                   thumbs_opened="true"
                   thumbs_text="false"
                   thumbs_dragging="true"
                   thumbs_onhoverscrolling="false"
                   thumbs_scrollbuttons="false"
                   thumbs_scrollindicator="false"
                   thumbs_loop="false"
                   tooltips_buttons="false"
                   tooltips_thumbs="false"
                   tooltips_hotspots="false"
                   tooltips_mapspots="false"
                   deeplinking="false"
                   loadscene_flags="MERGE"
                   loadscene_blend="ZOOMBLEND(2.0, 2.0, easeInOutSine)"
                   loadscene_blend_prev="OPENBLEND(1.0, -0.5, 0.3, 0.8, linear)"
                   loadscene_blend_next="BLEND(1.0,easeInCubic)"
                   loadingtext="loading..."
                   layout_width="100%"
                   layout_maxwidth="814"
                   controlbar_width="-24"
                   controlbar_height="40"
                   controlbar_offset="20"
                   controlbar_offset_closed="-40"
                   controlbar_overlap.no-fractionalscaling="10"
                   controlbar_overlap.fractionalscaling="0"
                   design_skin_images="vtourskin.png"
                   design_bgcolor="0x2D3E50"
                   design_bgalpha="0.8"
                   design_bgborder="0"
                   design_bgroundedge="1"
                   design_bgshadow="0 4 10 0x000000 0.3"
                   design_thumbborder_bgborder="3 0xFFFFFF 1.0"
                   design_thumbborder_padding="2"
                   design_thumbborder_bgroundedge="0"
                   design_text_css="color:#FFFFFF; font-family:Arial;"
                   design_text_shadow="1"
    />

    <!--文字logo-->
    <layer name="text"
           url="%SWFPATH%/plugins/textfield.swf"
           html="北京阿尔法视觉科技技术支持"
           align="righttop"
           x="-40" y="0" width="200" height="20"
           keep="true"
           visible="true"
           backgroundalpha="0"
           backgroundcolor="#000"
           css="text-align:left; color:#9B8179; font-family:SimHei; font-size:12px;"
           onclick="openurl('http://www.alphavisual.cn/',_blank);"
    />

    <!--场景过度效果-->
    <blendmodes name="zoom blend"        description="缩放过渡"  blend="ZOOMBLEND(2.0, 2.0, easeInOutSine)" />

    <!-- 全景引入音频插件 -->
    <plugin name="soundinterface" url="%SWFPATH%/plugins/soundinterface.swf" alturl="%SWFPATH%/plugins/soundinterface.js" volume="1" preload="true" keep="true" />

    <!--在用户交互动作之后重置定时器-->
    <action name="bombtimer">
        set(autorotate.enabled,true);
        set(bt,%1);
        add(bt,1);
        delayedcall(1, bombtimer(get(bt)));
        copy(bt_1,autorotate.speed);
        Math.abs(bt_1);
        div(bt_2,360,bt_1);
        add(bt_2,autorotate.waittime);
        if(bt GE bt_2, set(bt,0); nextscene(););
    </action>
    <events onmousedown="set(bt,0);" />

    <!--下一个场景-->
    <action name="nextscene">
        set(ns, get(scene[get(xml.scene)].index));
        set(maxs, get(scene.count));
        add(ns,1);
        if(ns == maxs, set(ns,0));
        loadscene(get(scene[get(ns)].name), null, MERGE, BLEND(1.5));
    </action>

    <!--热点文字-->
    <action name="add_all_the_time_tooltip">
        txtadd(tooltipname, 'tooltip_', get(name));
        addplugin(get(tooltipname));
        txtadd(plugin[get(tooltipname)].parent, 'hotspot[', get(name), ']');
        set(plugin[get(tooltipname)].url,'%SWFPATH%/plugins/textfield.swf');
        set(plugin[get(tooltipname)].align,top);
        set(plugin[get(tooltipname)].edge,bottom);
        set(plugin[get(tooltipname)].x,0);
        set(plugin[get(tooltipname)].y,0);
        set(plugin[get(tooltipname)].autowidth,true);
        set(plugin[get(tooltipname)].autoheight,true);
        set(plugin[get(tooltipname)].vcenter,true);
        set(plugin[get(tooltipname)].background,true);
        set(plugin[get(tooltipname)].backgroundcolor,0x000000);
        set(plugin[get(tooltipname)].roundedge,5);
        set(plugin[get(tooltipname)].backgroundalpha,0.65);
        set(plugin[get(tooltipname)].padding,2);
        set(plugin[get(tooltipname)].border,false);
        set(plugin[get(tooltipname)].glow,0);
        set(plugin[get(tooltipname)].glowcolor,0xFFFFFF);
        set(plugin[get(tooltipname)].css,'text-align:center; color:#FFFFFF; font-family:MicrosoftYahei;  font-size:14px;');
        if(device.mobile,set(plugin[get(tooltipname)].css,'text-align:center; color:#FFFFFF; font-family:MicrosoftYahei; font-weight:bold; font-size:12px;');
        );
        set(plugin[get(tooltipname)].textshadow,0);
        set(plugin[get(tooltipname)].textshadowrange,6.0);
        set(plugin[get(tooltipname)].textshadowangle,90);
        if(text == '' OR text === null,
        copy(plugin[get(tooltipname)].html,
        scene[get(linkedscene)].title),
        copy(plugin[get(tooltipname)].html,text)
        );
        set(plugin[get(tooltipname)].enabled,false);
    </action>

<!-- 自定义地图开始-->
    <layer name="mapBtn"
           url="../img/btn/btn_map.png"
           align="lefttop"
           x="10" y="10" width="30" height="80"
           keep="true"
           visible="false"
           onclick="showMap();"
    />

    <!--地图最外面的容器-->
    <layer name="mapcontainer" keep="true" type="container" zorder="99" align="lefttop" state = "close" x="0" y="0" width="200"  height="175" visible="false">
        <!-- map的align一定是lefttop，这是为了确定热点位置，其坐标系以左上角为0点，也是为了方便我们通过ps等方法来获取热点的值。-->
        <layer name="map" url="../img/map/220.png" align="lefttop" x="0" y="0" width="200" height="175" handcursor="true" scalechildren="true" visible="true" onclick="bigmap();"  >
            <!-- 雷达遮罩部分，确保了雷达的扇形不会超出范围，这里也就是地图map的范围。注意这里也应该是对齐左上角，下面的各种layer通通都是对齐左上角，不然坐标系不统一的话，就很难确定热点的位置 -->
            <layer name="radarmask" type="container" align="lefttop" width="100%" height="100%" maskchildren="true">
                <!-- 雷达插件 zoder=1 在开始时为隐藏，只有激活activetespot这个action时才会显示 zorder为叠放次序 数字越大越靠前 -->
                <layer name="radar" visible="false"
                       url="%SWFPATH%/plugins/radar.swf" alturl="%SWFPATH%/plugins/radar.js"
                       align="lefttop" edge="center" zorder="1"
                       scale="0.5"
                       fillcolor="1x999999" fillalpha="0.3"
                       linecolor="0x999999" linewidth="0.5" linealpha="0.5"
                       headingoffset="0"
                />
                <!-- 热点 zorder=2，用style来统一处理 所有layer都载入了一个名为spot的style，注意这里spot是由0开始，而不是由1开始的，因此在一般情况下，地图点与场景一一对应，而场景的index是从0开始的，所以我们可以利用这一点提高代码的可读性-->
                <layer name="spot0" style="spot" x="230" y="250"  /><!--中间场景-->
                <layer name="spot1" style="spot" x="200" y="130"  /><!--左上角厨房-->
                <layer name="spot2" style="spot" x="430"  y="300" /><!--右下角卧室-->
                <layer name="spot3" style="spot" x="130" y="300"  /><!--左下角卧室-->
                <layer name="spot4" style="spot" x="350" y="180"  /><!--右上角卧室-->
                <layer name="spot5" style="spot" x="350" y="300"  /><!--男衣帽间卧室-->
                <layer name="spot6" style="spot" x="280" y="300"  /><!--书房-->

                <!-- 激活的热点 zorder=3 开始时候隐藏，在这里是一个绿色的地图点， 表示当前的场景-->
                <layer name="activespot" url="skin/green.png" scale="0.5" oy="0" ox="0" align="lefttop" edge="center" zorder="3" visible="false"/>
            </layer>
        </layer>
        <!--关闭大地图按钮-->
        <layer name="close" url="../img/close.png" align="righttop" x="0" y="0" width="40" height="40" visible="false" onclick="close_bigMap();" />
        <!--关闭小地图按钮-->
        <layer name="close1" url="../img/close1.png" align="lefttop" x="155" y="190" width="40" height="20" visible="true" onclick="close_smallMap();" />
    </layer>

    <!-- 地图点中相同的代码，都写在了style里面，修改的时候只需要修改style里面的代码，提高了效率。在onclick里，先是用subtxt得出spot后面的数字，也就是index，然后检查是否点击的热点就是当前场景，因为没有必要点击当前场景的热点又载入一遍，如果是点击其他的热点，则载入其他场景，载入场景的loadscene中利用了之前得到的spotid，这样就不用每次都写场景的名字了。-->
    <style name="spot"
           url="skin/blue.png"
           scale="0.5"
           oy="0"
           align="lefttop"
           edge="center"
           zorder="2"
           onclick="subtxt(spotid,get(name),4,2);
                    if(spotid != scene[get(xml.scene)].index,
                        loadscene(get(scene[get(spotid)].name),null,MERGE,BLEND(1));
                    );"
    />

    <!-- 激活热点 - %1 = 当前雷达的方向值heading -->
    <action name="activatespot">
        <!-- 因此绿色地图点会在每次激活时替换蓝色普通地图点，因此每次激活之前，首先保证所有蓝色地图点是可见的，如果没有下面这个代码，则会使得上一个场景的蓝色地图点消失，这里用的是一个循环语句-->
        for(set(i,0),i LT scene.count,inc(i),
        txtadd(spotname,'spot',get(i));
        set(layer[get(spotname)].visible, true);
        );
        <!-- 将当前热点的坐标复制到雷达和激活点的坐标，直接利用当前场景的index，反过来得到layer的名字，这样就使得这个activetespot的参数只要一个就可以了-->
        txtadd(
        spotidnow,'spot',
        get(scene[get(xml.scene)].index));
        copy(layer[radar].x, layer[get(spotidnow)].x);
        copy(layer[radar].y, layer[get(spotidnow)].y);
        copy(layer[activespot].x, layer[get(spotidnow)].x);
        copy(layer[activespot].y, layer[get(spotidnow)].y);

        <!-- 将第二个参数赋值到雷达的heading -->
        set(layer[radar].heading, %1);
        <!-- 显示雷达和绿色激活热点，以及隐藏当前场景的地图点 -->
        set(layer[radar].visible, true);
        set(layer[activespot].visible, true);
        set(layer[get(spotidnow)].visible, false);

    </action>

    <!--点击小地图 变成大地图-->
    <action name="bigmap">
        set(layer[map].width,380);
        set(layer[map].height,333);
        tween(layer[map].align,"center",1,1easeInQuint);
        set(layer[mapcontainer].height,"100%");
        set(layer[mapcontainer].width,"100%");
        set(layer[mapcontainer].zorder,"99");
        set(layer[mapcontainer].bgcolor,"0x000000");
        set(layer[mapcontainer].bgalpha,"0.8");
        set(layer[close].visible, true);
        set(layer[close1].visible, false);
        jscall(setTimeout(function() {fadeOutRightPanel();}, 100));
    </action>

    <!--点击关闭大地图 变成小地图-->
    <action name="close_bigMap">
        set(layer[map].height,175);
        set(layer[map].width,200);
        set(layer[map].x,"0");
        set(layer[map].y,"0");
        set(layer[mapcontainer].height,175);
        set(layer[mapcontainer].width,200);
        set(layer[mapcontainer].bgcolor,"none");
        set(layer[mapcontainer].bgalpha,"none");
        set(layer[close].visible, false);
        set(layer[close1].visible, true);
        jscall(setTimeout(function() {fadeInRightPanel();}, 100));
    </action>

    <!--点击户型图 出来平面户型地图-->
    <action name="showMap">
        if(layer[mapcontainer].state == 'close',
            set(layer[mapcontainer].state,'open');
            tween(layer[mapBtn].width,0,0.1,easeOutQuint);
            tween(layer[mapcontainer].width,180,0.1,easeInQuint,set(layer[mapcontainer].visible,true));
            set(layer[close1].visible,true);
            set(layer[map].visible,true);
        );
    </action>

    <!--点击关闭小地图 变成按钮图-->
    <action name="close_smallMap">
        if( layer[mapcontainer].state == 'open',
            set(layer[mapcontainer].state,'close');
            tween(layer[mapcontainer].width,0,0.5,easeOutQuint,set(layer[mapcontainer].visible,false));
            tween(layer[mapBtn].width,30,0.5,easeInQuint);
            set(layer[close1].visible,false);
            set(layer[map].visible,false);
        );
    </action>

</krpano>
